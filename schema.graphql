type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ProjectCreated @entity(immutable:true) {
  id: ID!
  name: String
  image: String
  details: String
  deadline: BigInt
  pushChannel: Bytes
  projectAddress: Bytes
  creator: Bytes
  url: String
  members: [Member!]! @derivedFrom(field: "projectCreated")
  works: [Work!]! @derivedFrom(field: "projectCreated")
  notificationSettings: NotificationSettings @derivedFrom(field: "projectCreated")
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Member @entity {
  id: ID!
  address: Bytes!
  tokenId: BigInt!
  projectCreated: ProjectCreated!
}

type Work @entity {
  id: ID!
  description: String
  status: WorkStatus
  projectCreated: ProjectCreated!
}

type NotificationSettings @entity {
  id: ID!
  onWorks: Boolean
  onRewards: Boolean
  onMember: Boolean
  projectCreated: ProjectCreated!
}



enum WorkStatus {
  PENDING,
  IN_PROGRESS,
  COMPLETED
}
